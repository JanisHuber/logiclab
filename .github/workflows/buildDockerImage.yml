name: Create and publish Docker Compose images

on:
  push:
    branches: [ 'master' ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: janishuber/logiclab

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build backend WAR file
        run: mvn clean package --file logiclab-backend/pom.xml

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push backend image
        id: backend
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:latest ./logiclab-backend
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:latest | tee push_output.txt
          DIGEST=$(grep -o 'sha256:[a-f0-9]\{64\}' push_output.txt | tail -n1)
          echo "digest=$DIGEST" >> "$GITHUB_OUTPUT"

      - name: Build and push frontend image
        id: frontend
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:latest ./logiclab-frontend
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:latest | tee push_output.txt
          DIGEST=$(grep -o 'sha256:[a-f0-9]\{64\}' push_output.txt | tail -n1)
          echo "digest=$DIGEST" >> "$GITHUB_OUTPUT"


      - name: Attest backend image
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend
          subject-digest: ${{ steps.backend.outputs.digest }}
          push-to-registry: true

      - name: Attest frontend image
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend
          subject-digest: ${{ steps.frontend.outputs.digest }}
          push-to-registry: true